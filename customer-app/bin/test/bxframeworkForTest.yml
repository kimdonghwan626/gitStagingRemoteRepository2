spring:
  main:
    banner-mode: "off"
  cloud:
    bootstrap:
      enabled: true
    config:
      enabled: false
    kubernetes:
      discovery:
        all-namespaces: true
      reload:
        enabled: true
  sleuth:
    enabled: true
    web:
      enabled: true
    log:
      slf4j:
        enabled: true
  messages:
    basename: classpath:/i18n/messages
    encoding: UTF-8
    cache-duration: 15M

server:
  port: 8080
  max-http-header-size: 16KB
  error:
    include-exception: true
    include-stacktrace: on_trace_param
    
management:
  endpoints:
    web:
      exposure:
        include: "*"

logging:
  level:
    org.apache.tomcat: debug
    org.apache.catalina: debug
    org.apache.coyote: debug
  pattern:
    console: "%clr(%d{${LOG_DATEFORMAT_PATTERN:yyyy-MM-dd HH:mm:ss.SSS}}){faint} 
    %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} 
    %clr(%-40.40logger{39}){cyan} %clr(:){faint} 
    [%X{serviceId:-}] 
    %m%n${LOG_EXCEPTION_CONVERSION_WORD:%wEx}}"
    file: "%d{${LOG_DATEFORMAT_PATTERN:yyyy-MM-dd HH:mm:ss.SSS}} 
    ${LOG_LEVEL_PATTERN:-%5p} ${PID:- } --- [%t] %-40.40logger{39} : 
    [%X{serviceId:-}] 
    %m%n${LOG_EXCEPTION_CONVERSION_WORD:%wEx}}"

bxframework:
  etcd:
    enabled: true
    certificates: "/etcd.config/certificates"
    service-control-root: "/service_control/"
    endpoints:
      - "https://master-0.etcd.cfcr.internal:2379"
  request:
    system-header: "bxmc.request.SimpleSystemHeader"
    control-skip-patterns:
      - "/error"
      - "/swagger*/**"
      - "/actuator/*"
    interceptors:  # @Component annotated beanName
      - defaultServiceControlHandler
    imageloggers:  # @Component annotated beanName
      - defaultImageLoggingHandler    
    min-timeout-duration: 3s
    # extractor class name
    trace-key-extractor: bxmc.context.DefaultHttpRequestTraceKeyExtractor
    trace-keys:  # SpEL: ExHttpServletRequest members
      - name: x-request-start
        expression: "getHeader('x-request-start')"
      - name: host
        expression: "getHeader('host')"

---
spring:
  profiles: local | test
  main:
    banner-mode: "off"
  cloud:
    kubernetes:
      enabled: false
    discovery:
      client:
        simple:
          instances:
            local-service:
              - uri: http://localhost:${server.port}
  zipkin:
    enabled: false

server:
  error:
    include-exception: true
    #include-stacktrace: on_trace_param
    include-stacktrace: always
    
bxframework:
  etcd:
    enabled: false
  request:
    control-skip-patterns:
      - "/**"
  base-package: "sample,sample.controller,sample.service,sample.component,sample.dbio"
  datasource:
    driver-class-name: org.h2.Driver
    jdbc-url: jdbc:h2:mem:test;MODE=Oracle
    username: sa
    password: 
  application: # BxmApplication
    type: online
    datasource: # BxmApplicationDataSourceConfig
      main-ds: # DataSource Name <Map, ApplicationDataSource>
        jdbc: # JdbcApplicationDataSource
          driver-class-name: org.h2.Driver
          jdbc-url: jdbc:h2:mem:test;MODE=Oracle
          username: sa
          password: 
  batch:
    default-commit-interval: 100
    controller:
    daemon-controller:
    preprocessor:
    postprocessor:
    job-execution-listeners:
      - testJobExecutionListener
    step-execution-listeners:
      - testStepExecutionListener


management:
  endpoint:
    restart:
      enabled: true
    health:
      enabled: true
    info:
      enabled: true
    shutdown:
      enabled: true

logging:
  level:
    io.fabric8.kubernetes.client.Config: error
    org.apache: debug #${logging.level.root}
    bxmc: trace
    bxmc.request.mapping.AnnotatedRequestMappingHandlerMapping: debug #${logging.level.root}
    bxmc.example.HelloController: ${logging.level.root}
    org.springframework.web: debug
    sample: debug
    
