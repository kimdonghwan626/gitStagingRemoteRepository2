
// buildscript
buildscript {
	repositories {
	}
	dependencies {
	}
}

// plugins
plugins {
	id 'java'
	id "eclipse"
	id "maven-publish"
	id 'org.springframework.boot' version '2.3.4.RELEASE'
	id 'org.asciidoctor.convert' version '1.5.3' 
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'com.bmuschko.docker-spring-boot-application' version '5.0.0'
	id 'org.ajoberstar.grgit' version '3.1.1'
}

// variables
group = 'com.bankwareglobal'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

// apply plugin
apply plugin: 'maven-publish'
apply plugin: 'io.spring.dependency-management'

// repositories
repositories {
	//jcenter()
	maven {
		url "${artifactory_url}"
			credentials {
				username "${artifactory_user}"
				password "${artifactory_password}"
		}
	}
}

// ext
ext {
    set('snippetsDir', file("build/generated-snippets"))
    set('springCloudVersion', 'Hoxton.SR8')
    if(grgit) {
	    gitRevision = grgit.head().id
	    gitAbbRevision = grgit.head().abbreviatedId
	    project.version = "${project.version}-${gitAbbRevision}"
    }
}

// dependencyManagement
dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

// jar
jar {
    enabled = true
    from('src/main/java') {
		include  '**/*.dbio'
	}
}

// sourceSet
sourceSets.all {
	tasks[processResourcesTaskName].includeEmptyDirs = false
}
sourceSets {
	main {
		java {
			// include *.dbio
			srcDirs = ['src/main/java', 'src/main/resources', 'src/gen/java']
		}
		resources {
            srcDirs = ['src/main/java', 'src/main/resources']
        }
	}
	shared {
		java {
			compileClasspath += main.output
			compileClasspath += main.compileClasspath
			srcDirs = ['src/main/java', 'src/gen/java']
			include "${publishing_package_name}"
		}
		resources{
			srcDirs = ['src/main/java', 'src/gen/java']
			include  "${publishing_package_name}" 
			exclude  "**/*.omm"
		}
	}
}

eclipse.classpath.sourceSets = [sourceSets.main, sourceSets.test]

// test
test {
}

// etc
springBoot{
    mainClassName = 'bxmc.BxmCloudApplication'
}

bootJar {
    classifier = 'boot'
}

bootRun {
    args = ["--spring.profiles.active=local,swagger"]
    systemProperties System.properties
    jvmArgs = ["-Dlogging.level.root=INFO"]
}

tasks.withType(GenerateMavenPom).all {
	pom = publishing.publications.mavenJava.pom
}

task sharedJar(type: Jar) {
	enabled = true
	from sourceSets.shared.output
	classifier = 'shared'
}

task generateConfigProperties(type: WriteProperties){
    description = 'generateConfigProperties'
    encoding = "UTF-8"
    outputFile = project.file("src/main/resources/config-repository.properties")
    if( project.hasProperty("blobstore_local")){
        property("blobstore_local", "${blobstore_local}")
    }
    if( project.hasProperty("blobstore_cluster")){
        property("blobstore_cluster", "${blobstore_cluster}")
    }
}

task deleteConfigProperties( type: Delete){
    delete(project.file("src/main/resources/config-repository.properties"))
}

clean.finalizedBy(deleteConfigProperties)
processResources.dependsOn(generateConfigProperties)

// publising
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
		sharedJava(MavenPublication) {
			artifact(sharedJar) {
				classifier ""
				extension "jar"
			  }
		}
	}
	repositories {
		maven {
			url "${publishing_artifactory_url}"
				credentials {
					username "${publishing_artifactory_user}"
					password "${publishing_artifactory_password}"
			}
		}
	}
}


// dependencies
dependencies {
	compile 'bxmc-tool:bxmc-das-tester:5.0.0+'
	compile 'junit:junit:4.13'
	implementation 'bxm-runtime:bxm-omm-common:5.0.0+'
	implementation 'io.bankwareglobal.cloud:bxframework-core-extension:latest.release'
	implementation 'org.mybatis.scripting:mybatis-velocity:2.1.0'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher:1.5.1'
}
